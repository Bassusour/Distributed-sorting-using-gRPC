[0m[[0m[0mdebug[0m] [0m[0m[zinc] IncrementalCompile -----------[0m
[0m[[0m[0mdebug[0m] [0m[0mIncrementalCompile.incrementalCompile[0m
[0m[[0m[0mdebug[0m] [0m[0mprevious = Stamps for: 1 products, 1 sources, 4 libraries[0m
[0m[[0m[0mdebug[0m] [0m[0mcurrent source = Set(${BASE}/src/test/scala/distrSortTest/distrSortingTest.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m> initialChanges = InitialChanges(Changes(added = Set(${BASE}/src/test/scala/distrSortTest/distrSortingTest.scala), removed = Set(${BASE}/src/test/scala/simpletest/DistrSortingTest.scala), changed = Set(), unmodified = ...),Set(),Set(),API Changes: Set(NamesChange(simpletest.Worker$,ModifiedNames(changes = UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(clone,[Default]), UsedName(getWantedPartition,[Default]), UsedName(askIfDoneReceivingPartitions,[Default]), UsedName(ne,[Default]), UsedName(myPartition,[Default]), UsedName(notifyAll,[Default]), UsedName(askIfAllWorkersAreReady,[Default]), UsedName(isInstanceOf,[Default]), UsedName(sendUnwantedPartition,[Default]), UsedName(Worker,[Default]), UsedName(askIfDonePartitioning,[Default]), UsedName(id,[Default]), UsedName(getPartitions,[Default]), UsedName(synchronized,[Default]), UsedName(shutdown,[Default]), UsedName(resetCounter,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(toString,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(getID,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(sendKeyRange,[Default]), UsedName(apply,[Default]), UsedName(equals,[Default]), UsedName(##,[Default]), UsedName(eq,[Default]), UsedName(main,[Default]))), NamesChange(simpletest.Worker,ModifiedNames(changes = UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(clone,[Default]), UsedName(getWantedPartition,[Default]), UsedName(askIfDoneReceivingPartitions,[Default]), UsedName(ne,[Default]), UsedName(myPartition,[Default]), UsedName(notifyAll,[Default]), UsedName(askIfAllWorkersAreReady,[Default]), UsedName(isInstanceOf,[Default]), UsedName(sendUnwantedPartition,[Default]), UsedName(Worker,[Default]), UsedName(askIfDonePartitioning,[Default]), UsedName(id,[Default]), UsedName(getPartitions,[Default]), UsedName(synchronized,[Default]), UsedName(shutdown,[Default]), UsedName(resetCounter,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(toString,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(getID,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(sendKeyRange,[Default]), UsedName(apply,[Default]), UsedName(equals,[Default]), UsedName(##,[Default]), UsedName(eq,[Default]), UsedName(main,[Default]))), NamesChange(simpletest.Master,ModifiedNames(changes = UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(simpletest;Master;init;,[Default]), UsedName(clone,[Default]), UsedName(ne,[Default]), UsedName(stop,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(toString,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(start,[Default]), UsedName(equals,[Default]), UsedName(##,[Default]), UsedName(eq,[Default]), UsedName(main,[Default]), UsedName(Master,[Default])))))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe simpletest.Worker$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(clone,[Default]), UsedName(getWantedPartition,[Default]), UsedName(askIfDoneReceivingPartitions,[Default]), UsedName(ne,[Default]), UsedName(myPartition,[Default]), UsedName(notifyAll,[Default]), UsedName(askIfAllWorkersAreReady,[Default]), UsedName(isInstanceOf,[Default]), UsedName(sendUnwantedPartition,[Default]), UsedName(Worker,[Default]), UsedName(askIfDonePartitioning,[Default]), UsedName(id,[Default]), UsedName(getPartitions,[Default]), UsedName(synchronized,[Default]), UsedName(shutdown,[Default]), UsedName(resetCounter,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(toString,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(getID,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(sendKeyRange,[Default]), UsedName(apply,[Default]), UsedName(equals,[Default]), UsedName(##,[Default]), UsedName(eq,[Default]), UsedName(main,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) simpletest.Worker$: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) simpletest.Worker$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of simpletest.HelloTests: Set(UsedName(==,[Default]), UsedName(myPartition,[Default]), UsedName(Worker,[Default]), UsedName(id,[Default]), UsedName(getPartitions,[Default]), UsedName(getID,[Default]), UsedName(sendKeyRange,[Default]), UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe simpletest.Worker has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(clone,[Default]), UsedName(getWantedPartition,[Default]), UsedName(askIfDoneReceivingPartitions,[Default]), UsedName(ne,[Default]), UsedName(myPartition,[Default]), UsedName(notifyAll,[Default]), UsedName(askIfAllWorkersAreReady,[Default]), UsedName(isInstanceOf,[Default]), UsedName(sendUnwantedPartition,[Default]), UsedName(Worker,[Default]), UsedName(askIfDonePartitioning,[Default]), UsedName(id,[Default]), UsedName(getPartitions,[Default]), UsedName(synchronized,[Default]), UsedName(shutdown,[Default]), UsedName(resetCounter,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(toString,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(getID,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(sendKeyRange,[Default]), UsedName(apply,[Default]), UsedName(equals,[Default]), UsedName(##,[Default]), UsedName(eq,[Default]), UsedName(main,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) simpletest.Worker: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) simpletest.Worker.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of simpletest.HelloTests: Set(UsedName(==,[Default]), UsedName(myPartition,[Default]), UsedName(Worker,[Default]), UsedName(id,[Default]), UsedName(getPartitions,[Default]), UsedName(getID,[Default]), UsedName(sendKeyRange,[Default]), UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe simpletest.Master has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(simpletest;Master;init;,[Default]), UsedName(clone,[Default]), UsedName(ne,[Default]), UsedName(stop,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(toString,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(start,[Default]), UsedName(equals,[Default]), UsedName(##,[Default]), UsedName(eq,[Default]), UsedName(main,[Default]), UsedName(Master,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) simpletest.Master: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) simpletest.Master.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of simpletest.HelloTests: Set(UsedName(==,[Default]), UsedName(simpletest;Master;init;,[Default]), UsedName(stop,[Default]), UsedName(start,[Default]), UsedName(Master,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes:[0m
[0m[[0m[0mdebug[0m] [0m[0m	removed: Set(${BASE}/src/test/scala/simpletest/DistrSortingTest.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(${BASE}/src/test/scala/distrSortTest/distrSortingTest.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set(NamesChange(simpletest.Worker$,ModifiedNames(changes = UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(clone,[Default]), UsedName(getWantedPartition,[Default]), UsedName(askIfDoneReceivingPartitions,[Default]), UsedName(ne,[Default]), UsedName(myPartition,[Default]), UsedName(notifyAll,[Default]), UsedName(askIfAllWorkersAreReady,[Default]), UsedName(isInstanceOf,[Default]), UsedName(sendUnwantedPartition,[Default]), UsedName(Worker,[Default]), UsedName(askIfDonePartitioning,[Default]), UsedName(id,[Default]), UsedName(getPartitions,[Default]), UsedName(synchronized,[Default]), UsedName(shutdown,[Default]), UsedName(resetCounter,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(toString,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(getID,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(sendKeyRange,[Default]), UsedName(apply,[Default]), UsedName(equals,[Default]), UsedName(##,[Default]), UsedName(eq,[Default]), UsedName(main,[Default]))), NamesChange(simpletest.Worker,ModifiedNames(changes = UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(clone,[Default]), UsedName(getWantedPartition,[Default]), UsedName(askIfDoneReceivingPartitions,[Default]), UsedName(ne,[Default]), UsedName(myPartition,[Default]), UsedName(notifyAll,[Default]), UsedName(askIfAllWorkersAreReady,[Default]), UsedName(isInstanceOf,[Default]), UsedName(sendUnwantedPartition,[Default]), UsedName(Worker,[Default]), UsedName(askIfDonePartitioning,[Default]), UsedName(id,[Default]), UsedName(getPartitions,[Default]), UsedName(synchronized,[Default]), UsedName(shutdown,[Default]), UsedName(resetCounter,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(toString,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(getID,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(sendKeyRange,[Default]), UsedName(apply,[Default]), UsedName(equals,[Default]), UsedName(##,[Default]), UsedName(eq,[Default]), UsedName(main,[Default]))), NamesChange(simpletest.Master,ModifiedNames(changes = UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(simpletest;Master;init;,[Default]), UsedName(clone,[Default]), UsedName(ne,[Default]), UsedName(stop,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(toString,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(start,[Default]), UsedName(equals,[Default]), UsedName(##,[Default]), UsedName(eq,[Default]), UsedName(main,[Default]), UsedName(Master,[Default]))))[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(simpletest.HelloTests)[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set(simpletest.HelloTests)[0m
[0m[[0m[0mdebug[0m] [0m[0mall 1 sources are invalidated[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: simpletest.HelloTests[0m
[0m[[0m[0mdebug[0m] [0m[0mRecompiling all sources: number of invalidated sources > 50.0% of all sources[0m
[0m[[0m[0mdebug[0m] [0m[0mcompilation cycle 1[0m
[0m[[0m[0minfo[0m] [0m[0mcompiling 1 Scala source to /home/bastian_preisel/gitProjects/cs434_project/Distributed sorting/target/scala-2.13/test-classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.13:1.5.7:compile for Scala 2.13.7[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 131a9fa3 for Scala compiler version 2.13.7[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/home/bastian_preisel/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.7/scala-library-2.13.7.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/home/bastian_preisel/gitProjects/cs434_project/Distributed sorting/target/scala-2.13/test-classes:/home/bastian_preisel/gitProjects/cs434_project/Distributed sorting/target/scala-2.13/classes:/home/bastian_preisel/.cache/coursier/v1/https/repo1.maven.org/maven2/com/thesamet/scalapb/scalapb-runtime_2.13/0.11.1/scalapb-runtime_2.13-0.11.1.jar:/home/bastian_preisel/.cache/coursier/v1/https/repo1.maven.org/maven2/io/grpc/grpc-netty/1.36.1/grpc-netty-1.36.1.jar:/home/bastian_preisel/.cache/coursier/v1/https/repo1.maven.org/maven2/com/thesamet/scalapb/scalapb-runtime-grpc_2.13/0.11.1/scalapb-runtime-grpc_2.13-0.11.1.jar:/home/bastian_preisel/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/modules/scala-parser-combinators_2.13/1.1.2/scala-parser-combinators_2.13-1.1.2.jar:/home/bastian_preisel/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scalatest/scalatest_2.13/3.0.8/scalatest_2.13-3.0.8.jar:/home/bastian_preisel/.cache/coursier/v1/https/repo1.maven.org/maven2/com/thesamet/scalapb/lenses_2.13/0.11.1/lenses_2.13-0.11.1.jar:/home/bastian_preisel/.cache/coursier/v1/https/repo1.maven.org/maven2/com/google/protobuf/protobuf-java/3.15.6/protobuf-java-3.15.6.jar:/home/bastian_preisel/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/modules/scala-collection-compat_2.13/2.4.3/scala-collection-compat_2.13-2.4.3.jar:/home/bastian_preisel/.cache/coursier/v1/https/repo1.maven.org/maven2/io/grpc/grpc-core/1.36.1/grpc-core-1.36.1.jar:/home/bastian_preisel/.cache/coursier/v1/https/repo1.maven.org/maven2/io/netty/netty-codec-http2/4.1.52.Final/netty-codec-http2-4.1.52.Final.jar:/home/bastian_preisel/.cache/coursier/v1/https/repo1.maven.org/maven2/io/netty/netty-handler-proxy/4.1.52.Final/netty-handler-proxy-4.1.52.Final.jar:/home/bastian_preisel/.cache/coursier/v1/https/repo1.maven.org/maven2/com/google/guava/guava/30.0-android/guava-30.0-android.jar:/home/bastian_preisel/.cache/coursier/v1/https/repo1.maven.org/maven2/com/google/errorprone/error_prone_annotations/2.4.0/error_prone_annotations-2.4.0.jar:/home/bastian_preisel/.cache/coursier/v1/https/repo1.maven.org/maven2/io/perfmark/perfmark-api/0.23.0/perfmark-api-0.23.0.jar:/home/bastian_preisel/.cache/coursier/v1/https/repo1.maven.org/maven2/org/codehaus/mojo/animal-sniffer-annotations/1.19/animal-sniffer-annotations-1.19.jar:/home/bastian_preisel/.cache/coursier/v1/https/repo1.maven.org/maven2/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/home/bastian_preisel/.cache/coursier/v1/https/repo1.maven.org/maven2/io/grpc/grpc-stub/1.36.1/grpc-stub-1.36.1.jar:/home/bastian_preisel/.cache/coursier/v1/https/repo1.maven.org/maven2/io/grpc/grpc-protobuf/1.36.1/grpc-protobuf-1.36.1.jar:/home/bastian_preisel/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scalactic/scalactic_2.13/3.0.8/scalactic_2.13-3.0.8.jar:/home/bastian_preisel/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-reflect/2.13.7/scala-reflect-2.13.7.jar:/home/bastian_preisel/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/modules/scala-xml_2.13/1.2.0/scala-xml_2.13-1.2.0.jar:/home/bastian_preisel/.cache/coursier/v1/https/repo1.maven.org/maven2/io/grpc/grpc-api/1.36.1/grpc-api-1.36.1.jar:/home/bastian_preisel/.cache/coursier/v1/https/repo1.maven.org/maven2/com/google/code/gson/gson/2.8.6/gson-2.8.6.jar:/home/bastian_preisel/.cache/coursier/v1/https/repo1.maven.org/maven2/com/google/android/annotations/4.1.1.4/annotations-4.1.1.4.jar:/home/bastian_preisel/.cache/coursier/v1/https/repo1.maven.org/maven2/io/netty/netty-common/4.1.52.Final/netty-common-4.1.52.Final.jar:/home/bastian_preisel/.cache/coursier/v1/https/repo1.maven.org/maven2/io/netty/netty-buffer/4.1.52.Final/netty-buffer-4.1.52.Final.jar:/home/bastian_preisel/.cache/coursier/v1/https/repo1.maven.org/maven2/io/netty/netty-transport/4.1.52.Final/netty-transport-4.1.52.Final.jar:/home/bastian_preisel/.cache/coursier/v1/https/repo1.maven.org/maven2/io/netty/netty-codec/4.1.52.Final/netty-codec-4.1.52.Final.jar:/home/bastian_preisel/.cache/coursier/v1/https/repo1.maven.org/maven2/io/netty/netty-handler/4.1.52.Final/netty-handler-4.1.52.Final.jar:/home/bastian_preisel/.cache/coursier/v1/https/repo1.maven.org/maven2/io/netty/netty-codec-http/4.1.52.Final/netty-codec-http-4.1.52.Final.jar:/home/bastian_preisel/.cache/coursier/v1/https/repo1.maven.org/maven2/io/netty/netty-codec-socks/4.1.52.Final/netty-codec-socks-4.1.52.Final.jar:/home/bastian_preisel/.cache/coursier/v1/https/repo1.maven.org/maven2/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/home/bastian_preisel/.cache/coursier/v1/https/repo1.maven.org/maven2/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/bastian_preisel/.cache/coursier/v1/https/repo1.maven.org/maven2/org/checkerframework/checker-compat-qual/2.5.5/checker-compat-qual-2.5.5.jar:/home/bastian_preisel/.cache/coursier/v1/https/repo1.maven.org/maven2/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar:/home/bastian_preisel/.cache/coursier/v1/https/repo1.maven.org/maven2/com/google/api/grpc/proto-google-common-protos/2.0.1/proto-google-common-protos-2.0.1.jar:/home/bastian_preisel/.cache/coursier/v1/https/repo1.maven.org/maven2/io/grpc/grpc-protobuf-lite/1.36.1/grpc-protobuf-lite-1.36.1.jar:/home/bastian_preisel/.cache/coursier/v1/https/repo1.maven.org/maven2/io/grpc/grpc-context/1.36.1/grpc-context-1.36.1.jar:/home/bastian_preisel/.cache/coursier/v1/https/repo1.maven.org/maven2/io/netty/netty-resolver/4.1.52.Final/netty-resolver-4.1.52.Final.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 0.586037339 s[0m
[0m[[0m[0mdebug[0m] [0m[0mdone compiling[0m
