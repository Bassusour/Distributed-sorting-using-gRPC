// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package protoGreet.hello

@SerialVersionUID(0L)
final case class KeyRange(
    minKey: _root_.scala.Predef.String = "",
    maxKey: _root_.scala.Predef.String = "",
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[KeyRange] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = minKey
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = maxKey
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = minKey
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = maxKey
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withMinKey(__v: _root_.scala.Predef.String): KeyRange = copy(minKey = __v)
    def withMaxKey(__v: _root_.scala.Predef.String): KeyRange = copy(maxKey = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = minKey
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = maxKey
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(minKey)
        case 2 => _root_.scalapb.descriptors.PString(maxKey)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = protoGreet.hello.KeyRange
    // @@protoc_insertion_point(GeneratedMessage[protoGreet.KeyRange])
}

object KeyRange extends scalapb.GeneratedMessageCompanion[protoGreet.hello.KeyRange] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[protoGreet.hello.KeyRange] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): protoGreet.hello.KeyRange = {
    var __minKey: _root_.scala.Predef.String = ""
    var __maxKey: _root_.scala.Predef.String = ""
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __minKey = _input__.readStringRequireUtf8()
        case 18 =>
          __maxKey = _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    protoGreet.hello.KeyRange(
        minKey = __minKey,
        maxKey = __maxKey,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[protoGreet.hello.KeyRange] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      protoGreet.hello.KeyRange(
        minKey = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        maxKey = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = HelloProto.javaDescriptor.getMessageTypes().get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = HelloProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = protoGreet.hello.KeyRange(
    minKey = "",
    maxKey = ""
  )
  implicit class KeyRangeLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, protoGreet.hello.KeyRange]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, protoGreet.hello.KeyRange](_l) {
    def minKey: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.minKey)((c_, f_) => c_.copy(minKey = f_))
    def maxKey: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.maxKey)((c_, f_) => c_.copy(maxKey = f_))
  }
  final val MINKEY_FIELD_NUMBER = 1
  final val MAXKEY_FIELD_NUMBER = 2
  def of(
    minKey: _root_.scala.Predef.String,
    maxKey: _root_.scala.Predef.String
  ): _root_.protoGreet.hello.KeyRange = _root_.protoGreet.hello.KeyRange(
    minKey,
    maxKey
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[protoGreet.KeyRange])
}
